# Build stage
FROM python:3.12-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install uv for faster dependency installation
RUN pip install --no-cache-dir uv

# Copy only requirements file first (for better caching)
COPY requirements.txt ./

# Install dependencies
RUN uv pip install --system --no-cache-dir -r requirements.txt

# Runtime stage
FROM python:3.12-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Copy only necessary files from builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Create necessary directories
RUN mkdir -p /app/faiss_index /app/scripts /app/resources /app/books

# Copy FAISS index files from temp directory
COPY temp_faiss/ /app/faiss_index/

# Copy application files
COPY . .

# Clean up
RUN find /usr/local -type d -name '__pycache__' -exec rm -r {} + \
    && find /usr/local -name '*.pyc' -delete \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PORT=8000

# Expose the port the app runs on
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Run the application
# Use shell form to allow environment variable expansion
CMD sh -c "uvicorn start_server:main --host 0.0.0.0 --port ${PORT:-8000}"
