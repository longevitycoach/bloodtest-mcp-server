{
  "performance_load_tests": {
    "description": "Performance and load testing scenarios for Bloodtest MCP Server under various conditions",
    "test_categories": {
      "response_time_benchmarks": [
        {
          "test_id": "perf_001",
          "name": "api_endpoint_response_times",
          "description": "Benchmark response times for all API endpoints",
          "endpoints": [
            {
              "endpoint": "/health",
              "method": "GET",
              "target_response_time_ms": 100,
              "max_acceptable_ms": 500,
              "test_iterations": 100
            },
            {
              "endpoint": "/",
              "method": "GET", 
              "target_response_time_ms": 150,
              "max_acceptable_ms": 750,
              "test_iterations": 100
            },
            {
              "endpoint": "/parameters",
              "method": "GET",
              "target_response_time_ms": 200,
              "max_acceptable_ms": 1000,
              "test_iterations": 100
            },
            {
              "endpoint": "/reference/ferritin",
              "method": "GET",
              "target_response_time_ms": 150,
              "max_acceptable_ms": 800,
              "test_iterations": 100
            },
            {
              "endpoint": "/reference/vitamin_d",
              "method": "GET",
              "target_response_time_ms": 150,
              "max_acceptable_ms": 800,
              "test_iterations": 100
            }
          ],
          "success_criteria": {
            "95th_percentile_under_target": true,
            "99th_percentile_under_max": true,
            "zero_timeouts": true
          }
        }
      ],
      "concurrent_load_tests": [
        {
          "test_id": "load_001",
          "name": "moderate_concurrent_users",
          "description": "Test system behavior with moderate concurrent load",
          "load_parameters": {
            "concurrent_users": 10,
            "ramp_up_time_seconds": 30,
            "test_duration_minutes": 5,
            "think_time_seconds": 2
          },
          "user_scenarios": [
            {
              "scenario": "api_browsing",
              "weight": 40,
              "actions": [
                {"action": "GET /health", "probability": 0.2},
                {"action": "GET /parameters", "probability": 0.3}, 
                {"action": "GET /reference/ferritin", "probability": 0.25},
                {"action": "GET /reference/vitamin_d", "probability": 0.25}
              ]
            },
            {
              "scenario": "parameter_research",
              "weight": 30,
              "actions": [
                {"action": "GET /reference/ferritin?sex=female", "probability": 0.2},
                {"action": "GET /reference/tsh", "probability": 0.2},
                {"action": "GET /reference/magnesium", "probability": 0.2},
                {"action": "GET /reference/zinc", "probability": 0.2},
                {"action": "GET /reference/selenium", "probability": 0.2}
              ]
            },
            {
              "scenario": "health_monitoring",
              "weight": 20,
              "actions": [
                {"action": "GET /health", "probability": 0.5},
                {"action": "GET /", "probability": 0.5}
              ]
            },
            {
              "scenario": "error_handling",
              "weight": 10,
              "actions": [
                {"action": "GET /reference/invalid_param", "probability": 0.5},
                {"action": "GET /reference/ferritin?sex=invalid", "probability": 0.5}
              ]
            }
          ],
          "performance_requirements": {
            "average_response_time_ms": 500,
            "95th_percentile_ms": 1000,
            "error_rate_percentage": 2,
            "throughput_requests_per_second": 20
          }
        },
        {
          "test_id": "load_002",
          "name": "high_concurrent_users",
          "description": "Test system behavior under high concurrent load",
          "load_parameters": {
            "concurrent_users": 50,
            "ramp_up_time_seconds": 60,
            "test_duration_minutes": 10,
            "think_time_seconds": 1
          },
          "performance_requirements": {
            "average_response_time_ms": 800,
            "95th_percentile_ms": 2000,
            "error_rate_percentage": 5,
            "throughput_requests_per_second": 80,
            "memory_usage_max_mb": 1500,
            "cpu_usage_max_percentage": 85
          }
        },
        {
          "test_id": "load_003",
          "name": "stress_test_breaking_point",
          "description": "Find system breaking point and failure modes",
          "load_parameters": {
            "starting_users": 10,
            "max_users": 200,
            "increment_users": 10,
            "increment_interval_minutes": 2,
            "test_duration_minutes": 30
          },
          "failure_detection": {
            "response_time_threshold_ms": 5000,
            "error_rate_threshold_percentage": 20,
            "consecutive_failures_threshold": 10
          },
          "monitoring_metrics": [
            "response_time_distribution",
            "error_rate_by_endpoint",
            "memory_usage_trend",
            "cpu_utilization",
            "connection_pool_status",
            "database_connection_count"
          ]
        }
      ],
      "mcp_tool_performance": [
        {
          "test_id": "mcp_perf_001",
          "name": "rag_search_performance",
          "description": "Test RAG search performance under load",
          "test_scenarios": [
            {
              "query_type": "simple_nutrient",
              "queries": [
                "vitamin D deficiency",
                "iron absorption",
                "magnesium benefits",
                "zinc immune function"
              ],
              "concurrent_requests": 5,
              "iterations": 20,
              "target_response_time_ms": 1500
            },
            {
              "query_type": "complex_multi_nutrient",
              "queries": [
                "iron vitamin D magnesium interaction absorption timing",
                "ferritin deficiency fatigue energy vegetarian supplementation",
                "thyroid optimization selenium zinc iodine TSH"
              ],
              "concurrent_requests": 3,
              "iterations": 10,
              "target_response_time_ms": 2500
            }
          ],
          "performance_validation": {
            "search_relevance_score_min": 0.7,
            "response_completeness_check": true,
            "memory_leak_detection": true
          }
        },
        {
          "test_id": "mcp_perf_002",
          "name": "workflow_execution_performance",
          "description": "Test complete workflow execution performance",
          "workflow_scenarios": [
            {
              "workflow": "supplement_therapy",
              "concurrent_executions": 3,
              "iterations": 15,
              "target_completion_time_ms": 5000,
              "includes_rag_searches": true
            }
          ],
          "resource_monitoring": {
            "peak_memory_usage_mb": 2000,
            "sustained_cpu_percentage": 70,
            "temp_file_cleanup": true
          }
        }
      ],
      "database_performance": [
        {
          "test_id": "db_perf_001",
          "name": "faiss_index_performance",
          "description": "Test FAISS vector database performance",
          "test_scenarios": [
            {
              "operation": "similarity_search",
              "vector_dimensions": 384,
              "index_size": "supplement-therapy",
              "concurrent_searches": 10,
              "search_k_values": [1, 3, 5, 10, 20],
              "target_search_time_ms": 100
            },
            {
              "operation": "index_loading",
              "max_loading_time_seconds": 30,
              "memory_usage_after_load_mb": 500
            }
          ]
        }
      ],
      "memory_performance": [
        {
          "test_id": "mem_perf_001",
          "name": "memory_usage_patterns",
          "description": "Monitor memory usage patterns during various operations",
          "test_operations": [
            {
              "operation": "server_startup",
              "baseline_memory_mb": 200,
              "max_startup_memory_mb": 800
            },
            {
              "operation": "rag_system_initialization",
              "additional_memory_mb": 300,
              "max_total_memory_mb": 1100
            },
            {
              "operation": "concurrent_api_requests",
              "request_count": 100,
              "max_memory_increase_mb": 100
            },
            {
              "operation": "workflow_execution",
              "max_per_workflow_memory_mb": 50,
              "memory_cleanup_verification": true
            }
          ],
          "memory_leak_detection": {
            "measurement_interval_seconds": 30,
            "test_duration_minutes": 10,
            "acceptable_growth_mb_per_minute": 5
          }
        }
      ]
    },
    "performance_test_tools": {
      "load_testing_framework": "locust",
      "monitoring_tools": ["psutil", "memory_profiler", "py-spy"],
      "metrics_collection": {
        "response_times": "percentiles_and_distribution",
        "throughput": "requests_per_second",
        "resource_usage": "continuous_monitoring",
        "error_rates": "by_endpoint_and_type"
      }
    },
    "baseline_performance_targets": {
      "api_endpoints": {
        "health_check_ms": 100,
        "parameter_lookup_ms": 200,
        "reference_retrieval_ms": 150
      },
      "mcp_tools": {
        "rag_search_ms": 1500,
        "workflow_execution_ms": 5000,
        "sequential_thinking_ms": 200
      },
      "system_resources": {
        "max_memory_usage_mb": 2000,
        "max_cpu_usage_percentage": 80,
        "max_startup_time_seconds": 45
      },
      "reliability": {
        "uptime_percentage": 99.9,
        "error_rate_percentage": 0.1,
        "recovery_time_seconds": 30
      }
    },
    "scalability_tests": [
      {
        "test_id": "scale_001",
        "name": "horizontal_scaling_simulation",
        "description": "Simulate multiple server instances handling distributed load",
        "scaling_parameters": {
          "simulated_instances": 3,
          "load_distribution": "round_robin",
          "total_concurrent_users": 150,
          "test_duration_minutes": 15
        },
        "validation_criteria": {
          "load_distribution_variance": 10,
          "cross_instance_consistency": true,
          "failover_handling": "graceful_degradation"
        }
      }
    ]
  }
}